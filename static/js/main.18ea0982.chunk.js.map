{"version":3,"sources":["components/coinReference.js","components/header.js","components/cards.js","App.js","index.js"],"names":["coinReference","id","url","name","ticker","Header","props","class","currentScore","highScore","avgScore","gameRecord","window","Cards","useState","0","1","2","3","4","5","6","7","8","9","selectedCards","setSelectedCards","setCurrentScore","setHighScore","setAvgScore","selectCard","item","i","prevState","score","push","total","length","avg","stringed","toString","rounded","toFixed","findAverageScore","resetGame","useEffect","j","Math","floor","random","shuffle","map","onClick","src","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18ea0982.chunk.js","sourcesContent":["//resource: https://cryptologos.cc/\n\nexport const coinReference = [\n    {\n        id: 0,\n        url: \"https://cryptologos.cc/logos/bitcoin-btc-logo.png?v=010\",\n        name: \"Bitcoin\",\n        ticker: \"BTC\" \n    },\n    {\n        id: 1,\n        url: \"https://cryptologos.cc/logos/ethereum-eth-logo.png?v=010\",\n        name: \"Ethereum\", \n        ticker: \"ETH\" \n    },\n    {\n        id: 2,\n        url: \"https://cryptologos.cc/logos/xrp-xrp-logo.png?v=010\",\n        name: \"Ripple\",\n        ticker: \"XRP\" \n    },\n    {\n        id: 3,\n        url: \"https://cryptologos.cc/logos/binance-coin-bnb-logo.png?v=010\",\n        name: \"Binance\",\n        ticker: \"BNB\"  \n    },\n    {\n        id: 4,\n        url: \"https://cryptologos.cc/logos/tether-usdt-logo.png?v=010\",\n        name: \"Tether\",\n        ticker: \"USDT\" \n    },\n    {\n        id: 5,\n        url: \"https://cryptologos.cc/logos/cardano-ada-logo.png?v=010\",\n        name: \"Cardano\",\n        ticker: \"ADA\" \n    },\n    {\n        id: 6,\n        url: \"https://cryptologos.cc/logos/polkadot-new-dot-logo.png?v=010\",\n        name: \"Polkadot\",\n        ticker: \"DOT\" \n    },\n    {\n        id: 7,\n        url: \"https://cryptologos.cc/logos/litecoin-ltc-logo.png?v=010\",\n        name: \"Litecoin\",\n        ticker: \"LTC\"  \n    },\n    {\n        id: 8,\n        url: \"https://cryptologos.cc/logos/chainlink-link-logo.png?v=010\",\n        name: \"Chainlink\",\n        ticker: \"LINK\"  \n    },\n    {\n        id: 9,\n        url: \"https://cryptologos.cc/logos/stellar-xlm-logo.png?v=010\",\n        name: \"Stellar\",\n        ticker: \"XLM\"\n    }\n    \n]\n\n","import React from \"react\";\n\nconst Header = (props) => {\n  return (\n    <>\n      <div class=\"bg-white-100 h40 flex flex-col  text-center mt-10 pt-5 pb-5 rounded text-white \">\n        <span class=\" text-5xl font-bold mb-5 \">Coin Cards</span>\n        <span class=\"pb-10\">\n          Don't select a coin more than once, see if you can get to 10.\n        </span>\n        <div class=\"flex justify-center align-center\">\n          <span class=\" text-xl pr-10\">\n            Current Score: {props.currentScore}\n          </span>\n          <span class=\"text-xl pl-10 pr-10\">High Score: {props.highScore}</span>\n          <span class=\"text-xl pl-10\">Average Score: {props.avgScore}</span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport { coinReference } from \"./coinReference\";\nimport Header from \"./header\";\n\nlet gameRecord = [];\nwindow.gameRecord = gameRecord;\n\nconst Cards = (props) => {\n  const [selectedCards, setSelectedCards] = useState([\n    {\n      0: false,\n      1: false,\n      2: false,\n      3: false,\n      4: false,\n      5: false,\n      6: false,\n      7: false,\n      8: false,\n      9: false,\n    },\n  ]);\n\n  const [currentScore, setCurrentScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [avgScore, setAvgScore] = useState(\"0\");\n\n  useEffect(() => {\n    shuffle();\n  }, [selectedCards]);\n\n  function shuffle() {\n    for (let i = coinReference.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [coinReference[i], coinReference[j]] = [\n        coinReference[j],\n        coinReference[i],\n      ];\n    }\n    return;\n  }\n\n  function selectCard(item) {\n    if (selectedCards[item] === true) {\n      resetGame();\n      if (currentScore > highScore) {\n        setHighScore(currentScore);\n      }\n    } else\n      setSelectedCards(\n        (prevState) => ({\n          ...prevState,\n          [item]: true,\n        }),\n        setCurrentScore(currentScore + 1)\n      );\n  }\n\n  function resetGame() {\n    for (let i = 0; i < 10; i++) {\n      setSelectedCards((prevState) => ({\n        ...prevState,\n        [i]: false,\n      }));\n\n      setCurrentScore(0);\n    }\n    let score = currentScore;\n    gameRecord.push(score);\n    findAverageScore();\n  }\n\n  function findAverageScore() {\n    let total = 0;\n    for (let i = 0; i < gameRecord.length; i++) {\n      total += gameRecord[i];\n    }\n\n    let avg = total / gameRecord.length;\n    let stringed = avg.toString();\n\n    if (stringed.length > 1) {\n      let rounded = avg.toFixed(2);\n      setAvgScore(rounded);\n    } else {\n      setAvgScore(stringed);\n    }\n  }\n\n  return (\n    <div class=\"flex flex-col w-1/2\">\n      <Header\n        highScore={highScore}\n        currentScore={currentScore}\n        avgScore={avgScore}\n      />\n      ,\n      <div class=\"grid gap-x-1 grid-cols-5 place-items-center gap-.1\">\n        {coinReference.map((item, i) => {\n          return (\n            <div onClick={() => selectCard(item.id)}>\n              <div class=\"bg-gray-100 m-5 pl-5 pr-5 pt-5 pb-5 rounded text-center\">\n                <img\n                  class=\"max-w-38 max-h-24px mb-5\"\n                  src={item.url}\n                  alt=\"CoinLogo\"\n                />\n                <span id={i}>{item.name}</span>\n                <br></br>\n                <span>{item.ticker}</span>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Cards;\n","import './App.css';\nimport Cards from './components/cards'\n\nfunction App() {\n  return (\n    <div class='flex flex-col items-center'>\n    <Cards />\n   </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}