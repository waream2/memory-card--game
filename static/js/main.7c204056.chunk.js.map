{"version":3,"sources":["components/coinReference.js","components/header.js","components/cards.js","App.js","index.js"],"names":["coinReference","id","url","name","ticker","Header","props","class","currentScore","highScore","Cards","useState","0","1","2","3","4","5","6","7","8","9","selectedCards","setSelectedCards","setCurrentScore","setHighScore","selectCard","item","i","prevState","resetGame","useEffect","length","j","Math","floor","random","shuffle","map","onClick","src","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAEaA,EAAgB,CACzB,CACIC,GAAI,EACJC,IAAK,0DACLC,KAAM,UACNC,OAAQ,OAEZ,CACIH,GAAI,EACJC,IAAK,2DACLC,KAAM,WACNC,OAAQ,OAEZ,CACIH,GAAI,EACJC,IAAK,sDACLC,KAAM,SACNC,OAAQ,OAEZ,CACIH,GAAI,EACJC,IAAK,+DACLC,KAAM,UACNC,OAAQ,OAEZ,CACIH,GAAI,EACJC,IAAK,0DACLC,KAAM,SACNC,OAAQ,QAEZ,CACIH,GAAI,EACJC,IAAK,0DACLC,KAAM,UACNC,OAAQ,OAEZ,CACIH,GAAI,EACJC,IAAK,+DACLC,KAAM,WACNC,OAAQ,OAEZ,CACIH,GAAI,EACJC,IAAK,2DACLC,KAAM,WACNC,OAAQ,OAEZ,CACIH,GAAI,EACJC,IAAK,6DACLC,KAAM,YACNC,OAAQ,QAEZ,CACIH,GAAI,EACJC,IAAK,0DACLC,KAAM,UACNC,OAAQ,Q,OCxCDC,EAnBA,SAACC,GACd,OACE,mCACE,sBAAKC,MAAM,kFAAX,UACE,sBAAMA,MAAM,4BAAZ,wBACA,sBAAMA,MAAM,QAAZ,2EAGA,sBAAKA,MAAM,mCAAX,UACE,uBAAMA,MAAM,iBAAZ,4BACkBD,EAAME,gBAExB,uBAAMD,MAAM,gBAAZ,yBAAyCD,EAAMG,sBCoE1CC,EA9ED,SAACJ,GACb,MAA0CK,mBAAS,CACjDC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,IAVL,mBAAOC,EAAP,KAAsBC,EAAtB,KAYA,EAAwCZ,mBAAS,GAAjD,mBAAOH,EAAP,KAAqBgB,EAArB,KACA,EAAkCb,mBAAS,GAA3C,mBAAOF,EAAP,KAAkBgB,EAAlB,KAiBA,SAASC,EAAWC,IACU,IAAxBL,EAAcK,KAepB,WACE,IADoB,IAAD,WACVC,GACPL,GAAiB,SAACM,GAAD,mBAAC,eACbA,GADY,kBAEdD,GAAI,OAEPJ,EAAgB,IALTI,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAArBA,GAfPE,GACItB,EAAeC,GACjBgB,EAAajB,IAGfe,GACE,SAACM,GAAD,mBAAC,eACIA,GADL,kBAEGF,GAAO,MAEVH,EAAgBhB,EAAe,IAcrC,OAzCAuB,qBAAU,YAIV,WACE,IAAK,IAAIH,EAAI5B,EAAcgC,OAAS,EAAGJ,EAAI,EAAGA,IAAK,CACjD,IAAIK,EAAIC,KAAKC,MAAMD,KAAKE,UAAYR,EAAI,IADS,EAEV,CACrC5B,EAAciC,GACdjC,EAAc4B,IAFf5B,EAAc4B,GAFkC,KAE9B5B,EAAciC,GAFgB,MAJnDI,KACC,CAACf,IAwCF,sBAAKf,MAAM,sBAAX,UACE,cAAC,EAAD,CAAQE,UAAWA,EAAWD,aAAcA,IAD9C,IAEE,qBAAKD,MAAM,qDAAX,SACGP,EAAcsC,KAAI,SAACX,EAAMC,GACxB,OACE,qBAAKW,QAAS,kBAAMb,EAAWC,EAAK1B,KAApC,SACE,sBAAKM,MAAM,0DAAX,UACE,qBAAKA,MAAM,2BAA2BiC,IAAKb,EAAKzB,IAAKuC,IAAI,aACzD,sBAAMxC,GAAI2B,EAAV,SAAcD,EAAKxB,OACnB,uBACA,+BAAOwB,EAAKvB,uBC7DbsC,MARf,WACE,OACE,qBAAKnC,MAAM,6BAAX,SACA,cAAC,EAAD,OCDJoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7c204056.chunk.js","sourcesContent":["//resource: https://cryptologos.cc/\n\nexport const coinReference = [\n    {\n        id: 0,\n        url: \"https://cryptologos.cc/logos/bitcoin-btc-logo.png?v=010\",\n        name: \"Bitcoin\",\n        ticker: \"BTC\" \n    },\n    {\n        id: 1,\n        url: \"https://cryptologos.cc/logos/ethereum-eth-logo.png?v=010\",\n        name: \"Ethereum\", \n        ticker: \"ETH\" \n    },\n    {\n        id: 2,\n        url: \"https://cryptologos.cc/logos/xrp-xrp-logo.png?v=010\",\n        name: \"Ripple\",\n        ticker: \"XRP\" \n    },\n    {\n        id: 3,\n        url: \"https://cryptologos.cc/logos/binance-coin-bnb-logo.png?v=010\",\n        name: \"Binance\",\n        ticker: \"BNB\"  \n    },\n    {\n        id: 4,\n        url: \"https://cryptologos.cc/logos/tether-usdt-logo.png?v=010\",\n        name: \"Tether\",\n        ticker: \"USDT\" \n    },\n    {\n        id: 5,\n        url: \"https://cryptologos.cc/logos/cardano-ada-logo.png?v=010\",\n        name: \"Cardano\",\n        ticker: \"ADA\" \n    },\n    {\n        id: 6,\n        url: \"https://cryptologos.cc/logos/polkadot-new-dot-logo.png?v=010\",\n        name: \"Polkadot\",\n        ticker: \"DOT\" \n    },\n    {\n        id: 7,\n        url: \"https://cryptologos.cc/logos/litecoin-ltc-logo.png?v=010\",\n        name: \"Litecoin\",\n        ticker: \"LTC\"  \n    },\n    {\n        id: 8,\n        url: \"https://cryptologos.cc/logos/chainlink-link-logo.png?v=010\",\n        name: \"Chainlink\",\n        ticker: \"LINK\"  \n    },\n    {\n        id: 9,\n        url: \"https://cryptologos.cc/logos/stellar-xlm-logo.png?v=010\",\n        name: \"Stellar\",\n        ticker: \"XLM\"\n    }\n    \n]\n\n","import React from \"react\";\n\nconst Header = (props) => {\n  return (\n    <>\n      <div class=\"bg-white-100 h40 flex flex-col  text-center mt-10 pt-5 pb-5 rounded text-white \">\n        <span class=\" text-5xl font-bold mb-5 \">Coin Cards</span>\n        <span class=\"pb-10\">\n          Don't select a coin more than once, see if you can get to 10.\n        </span>\n        <div class=\"flex justify-center align-center\">\n          <span class=\" text-xl pr-10\">\n            Current Score: {props.currentScore}\n          </span>\n          <span class=\"text-xl pl-10\">High Score: {props.highScore}</span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport { coinReference } from \"./coinReference\";\nimport Header from \"./header\";\n\nconst Cards = (props) => {\n  const [selectedCards, setSelectedCards] = useState({\n    0: false,\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false,\n    9: false,\n  });\n  const [currentScore, setCurrentScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n\n  useEffect(() => {\n    shuffle();\n  }, [selectedCards]);\n\n  function shuffle() {\n    for (let i = coinReference.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [coinReference[i], coinReference[j]] = [\n        coinReference[j],\n        coinReference[i],\n      ];\n    }\n    return;\n  }\n\n  function selectCard(item) {\n    if (selectedCards[item] === true) {\n      resetGame();\n      if (currentScore > highScore) {\n        setHighScore(currentScore);\n      }\n    } else\n      setSelectedCards(\n        (prevState) => ({\n          ...prevState,\n          [item]: true,\n        }),\n        setCurrentScore(currentScore + 1)\n      );\n  }\n\n  function resetGame() {\n    for (let i = 0; i < 10; i++) {\n      setSelectedCards((prevState) => ({\n        ...prevState,\n        [i]: false,\n      }));\n      setCurrentScore(0);\n    }\n  }\n\n  return (\n    <div class=\"flex flex-col w-1/2\">\n      <Header highScore={highScore} currentScore={currentScore} />,\n      <div class=\"grid gap-x-1 grid-cols-5 place-items-center gap-.1\">\n        {coinReference.map((item, i) => {\n          return (\n            <div onClick={() => selectCard(item.id)}>\n              <div class=\"bg-gray-100 m-5 pl-5 pr-5 pt-5 pb-5 rounded text-center\">\n                <img class=\"max-w-38 max-h-24px mb-5\" src={item.url} alt=\"CoinLogo\" />\n                <span id={i}>{item.name}</span>\n                <br></br>\n                <span>{item.ticker}</span>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Cards;\n","import './App.css';\nimport Cards from './components/cards'\n\nfunction App() {\n  return (\n    <div class='flex flex-col items-center'>\n    <Cards />\n   </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}